"use client"

import { useState } from 'react';
import { useCity } from '@/contexts/CityContext';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Slider } from "@/components/ui/slider";
import dynamic from 'next/dynamic';
import { Thermometer, Users, AlertTriangle } from 'lucide-react';
import { DashboardHeader } from '@/components/ui/dashboard-header';

const OpenLayersMap = dynamic(() => import('@/components/OpenLayersMap'), {
  ssr: false,
  loading: () => (
    <div className="w-full h-[500px] flex items-center justify-center bg-gray-100 rounded-lg">
      Loading map...
    </div>
  )
});

const cityVulnerabilityData = {
  sargoda: {
    center: [72.6711, 32.0836],
    vulnerabilityPoints: [
      { coordinates: [72.6711, 32.0836], vulnerability: 0.8 },
      { coordinates: [72.6811, 32.0936], vulnerability: 0.6 },
      { coordinates: [72.6611, 32.0736], vulnerability: 0.4 }
    ],
    stats: {
      basePopulation: 1500000,
      vulnerableAreas: 12,
      averageTemperature: 35
    }
  },
  nairobi: {
    center: [36.8219, -1.2921],
    vulnerabilityPoints: [
      { coordinates: [36.8219, -1.2921], vulnerability: 0.7 },
      { coordinates: [36.8319, -1.3021], vulnerability: 0.5 },
      { coordinates: [36.8119, -1.2821], vulnerability: 0.3 }
    ],
    stats: {
      basePopulation: 4400000,
      vulnerableAreas: 15,
      averageTemperature: 28
    }
  },
  abijan: {
    center: [-4.0083, 5.3600],
    vulnerabilityPoints: [
      { coordinates: [-4.0083, 5.3600], vulnerability: 0.9 },
      { coordinates: [-4.0183, 5.3700], vulnerability: 0.7 },
      { coordinates: [-3.9983, 5.3500], vulnerability: 0.5 }
    ],
    stats: {
      basePopulation: 4700000,
      vulnerableAreas: 18,
      averageTemperature: 31
    }
  },
  "novi-sad": {
    center: [19.8335, 45.2671],
    vulnerabilityPoints: [
      { coordinates: [19.8335, 45.2671], vulnerability: 0.6 },
      { coordinates: [19.8435, 45.2771], vulnerability: 0.4 },
      { coordinates: [19.8235, 45.2571], vulnerability: 0.2 }
    ],
    stats: {
      basePopulation: 380000,
      vulnerableAreas: 8,
      averageTemperature: 22
    }
  }
};

export default function PopulationVulnerabilityPage() {
  const { selectedCity } = useCity();
  const city = selectedCity || 'sargoda';
  const cityData = cityVulnerabilityData[city];
  
  const [temperatureThreshold, setTemperatureThreshold] = useState(30);

  const calculateAffectedPopulation = (threshold: number) => {
    const baseTemp = cityData.stats.averageTemperature;
    const basePop = cityData.stats.basePopulation;
    
    const tempDiff = Math.max(0, threshold - baseTemp);
    const affectedPercentage = Math.min(0.8, (tempDiff * 0.1) + (tempDiff * tempDiff * 0.01));
    return Math.round(basePop * affectedPercentage).toLocaleString();
  };

  const affectedPopulation = calculateAffectedPopulation(temperatureThreshold);
  const riskLevel = temperatureThreshold < cityData.stats.averageTemperature ? 'Low' : 
                   temperatureThreshold < cityData.stats.averageTemperature + 5 ? 'Moderate' : 'High';

  return (
    <div className="container mx-auto p-6">
      <DashboardHeader 
        title="Population Vulnerability Analysis"
        badge={`${cityData.stats.vulnerableAreas} Risk Areas`}
      />

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              High Risk Population
            </CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{affectedPopulation}</div>
            <p className="text-xs text-muted-foreground">
              People in vulnerable areas
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Vulnerable Areas
            </CardTitle>
            <AlertTriangle className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{cityData.stats.vulnerableAreas}</div>
            <p className="text-xs text-muted-foreground">
              High-risk districts identified
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Risk Level
            </CardTitle>
            <Thermometer className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{riskLevel}</div>
            <p className="text-xs text-muted-foreground">
              Based on current threshold
            </p>
          </CardContent>
        </Card>
      </div>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Thermometer className="h-5 w-5" />
            Temperature Threshold Control
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="flex justify-between items-center">
              <span className="text-sm font-medium">Current Threshold: {temperatureThreshold}Â°C</span>
              <Badge variant={
                riskLevel === 'Low' ? 'secondary' : 
                riskLevel === 'Moderate' ? 'default' : 'destructive'
              }>
                {riskLevel} Risk
              </Badge>
            </div>
            <Slider
              value={[temperatureThreshold]}
              onValueChange={(value) => setTemperatureThreshold(value[0])}
              min={20}
              max={40}
              step={1}
              className="w-full"
            />
            <p className="text-sm text-muted-foreground">
              Adjust the temperature threshold to see how different temperatures affect the vulnerable population
            </p>
          </div>
        </CardContent>
      </Card>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle>Vulnerability Heat Map</CardTitle>
        </CardHeader>
        <CardContent>
          <OpenLayersMap
            center={cityData.center}
            zoom={12}
            vulnerabilityPoints={cityData.vulnerabilityPoints.filter(
              point => point.vulnerability >= ((temperatureThreshold - 20) / 20)
            )}
          />
        </CardContent>
      </Card>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle>Risk Factors</CardTitle>
          </CardHeader>
          <CardContent>
            <ul className="space-y-2">
              <li className="flex items-center text-amber-600">
                <AlertTriangle className="mr-2 h-4 w-4" />
                Limited access to cooling centers
              </li>
              <li className="flex items-center text-red-600">
                <AlertTriangle className="mr-2 h-4 w-4" />
                High population density
              </li>
              <li className="flex items-center text-orange-600">
                <AlertTriangle className="mr-2 h-4 w-4" />
                Insufficient green spaces
              </li>
            </ul>
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardTitle>Recommendations</CardTitle>
          </CardHeader>
          <CardContent>
            <ul className="space-y-2">
              <li className="flex items-center text-green-600">
                <Users className="mr-2 h-4 w-4" />
                Establish additional cooling centers
              </li>
              <li className="flex items-center text-green-600">
                <Users className="mr-2 h-4 w-4" />
                Increase urban vegetation coverage
              </li>
              <li className="flex items-center text-green-600">
                <Users className="mr-2 h-4 w-4" />
                Implement early warning systems
              </li>
            </ul>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}